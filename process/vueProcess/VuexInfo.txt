............ Vuex ...............

# Topics 

    State => Table
    Action => Insert
    Mutation => Update
    Getters => Select

# Explain

    state: {
        products: []
    }

    action: {
        getProduct function(){
            const data = get data from sorce;
            commit('SET_PRODUCT',data)
        }
    }

    mutations: {
        SET_PRODUCT(products) {
            state.products = products
        }
    }

    getters: {
        getProducts(){
            return state.products
        }
    }

............ Setup ...............

# store ( store/indx.js) 

    import Vue from 'vue';
    import Vuex from 'vuex';

    Vue.use(Vuex);

    const store = new Vuex.Store({
        modules: {},
        state: {
            // data initialize
        },
        actions: {
            // get data source method
        },
        mutations: {
            // The only way to actually change state in a Vuex store is by committing a mutation
        },
        getters: {
            // data store in state 
        }
    })
    
    export default store;

# main

    import store from './store'
    const app = new Vue({
        store,
        render: h => h(App)
    }).$mount("#app");


............ Get ...............

# vuex 
    state: {
      products: []
    },
    actions: {
      async loadProducts({commit}){
        const res  = await axios.get('http://localhost:8000/api/products');
        const data =  res?.data?.data;
        commit('SET_PRODUCTS',data);
      }
    },
    mutations: {
      SET_PRODUCTS(state,data){
        state.products = data;
      }
    },
    getters: {
      getProducts(state) {
        return state.products;
      }
    }

# vue

    data:()=>({
        products: [] 
    }),
    methods:{},
        async created () {
        await this.$store.dispatch('loadProducts');
        this.products =  this.$store.getters.getProducts;
    },

............ Single Get ...............

# vuex  

    getters: {
      getProductBySlug(state) {
        return (slug) => {
          return state.products.find(item => item.slug === slug)
        }
      }
    }

# vue

    data:()=>({
        product: {} 
    }),
    async created () {
        this.product = this.$store.getters.getProductBySlug(this.$route?.params?.slug);
    },